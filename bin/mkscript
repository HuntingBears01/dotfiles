#! /usr/bin/env bash

# Purpose:  Creates an executable script using a heredoc template & opens it in
#           Sublime or else opens existing scripts in Sublime
# Author:   Conor Martin

usage() {
  echo
  echo "Usage: ${PROGRAM} scriptname [/path/to/script/folder]"
  echo
  echo "Default path: current directory"
  echo
}

if [[ $# -eq 0 ]]; then
  usage
  exit 0
elif [[ $# -gt 1 ]]; then
  scriptFolder="$2"
  scriptFile="${scriptFolder}/$1"
else
  scriptFolder="."
  scriptFile="${scriptFolder}/$1"
fi

if [[ -f "${scriptFile}" ]]; then
  subl "${scriptFile}"
elif [[ -d "${scriptFile}" ]]; then
  echo "ERROR: ${scriptFile} is a directory"
  exit 1
else
  # NB Use '' around EOF to prevent substitution & expansion inside heredoc
  cat << 'EOF' > "${scriptFile}"
#! /usr/bin/env bash

# Purpose:  
# Author:   Conor Martin


#------------------------------------------------------------------------------
# Configuration
#------------------------------------------------------------------------------

# Set PATH to sane defaults
PATH=/usr/local/bin:/usr/bin:/bin
export PATH

# Global variables
progDir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
progName=$(basename "$0")

# Text colours
red='tput setaf 9'
green='tput setaf 10'
yellow='tput setaf 11'
magenta='tput setaf 13'
cyan='tput setaf 14'
grey='tput setaf 8'
reset='tput sgr0'

# Set default file & folder permissions for this script
umask 0077


#------------------------------------------------------------------------------
# Functions
#------------------------------------------------------------------------------

usage() {
  # Purpose:  Display usage instructions
  # Usage:    usage
  echo
  echo "Usage: ${progName} "
  echo
}
begin() {
  # Purpose:  Prints full path to program
  # Usage:    begin
  ${grey}; printf "\\n> "
  ${magenta}; printf "%s/%s\\n\\n" "${progDir}" "${progName}"
  ${reset}
}
check() {
  # Purpose:  Checks the return code and displays an appropriate message
  # Usage:    check $? "Task description"
  if [[ $1 -eq 0 ]]; then
    okay "$2 complete"
  else
    fail "$2 failed"
  fi
}
fail() {
  # Purpose:  Display a task failed message and exit
  # Usage:    fail "Message"
  ${red}; printf "✗"
  ${grey}; printf " %s\\n\\n" "$1"
  ${reset}; exit 1
}
info() {
  # Purpose:  Display an informational message
  # Usage:    info "Message"
  ${cyan}; printf "ℹ︎"
  ${grey}; printf " %s\\n" "$1"
  ${reset}
}
okay() {
  # Purpose:  Display a task successful message
  # Usage:    okay "Message"
  ${green}; printf "✓"
  ${grey}; printf " %s\\n\\n" "$1"
  ${reset}
}
warn() {
  # Purpose:  Display a warning message and continue
  # Usage:    warn "Message"
  ${yellow}; printf "!"
  ${grey}; printf " %s\\n\\n" "$1"
  ${reset}
}


#------------------------------------------------------------------------------
# Main
#------------------------------------------------------------------------------

begin

if [[ $# -eq 0 ]]; then
  usage
  exit 0
fi

exit 0
EOF

  chmod +x "${scriptFile}"
  subl "${scriptFile}"
fi
