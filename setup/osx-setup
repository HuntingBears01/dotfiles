#!/usr/bin/env bash

if [ $(uname -s) = "Darwin" ]; then

    # Get script directory
    SOURCE="${BASH_SOURCE[0]}"
    while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
        DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
        SOURCE="$(readlink "$SOURCE")"
        [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, resolve it
    done
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

    e_begin() {
        echo -e "\n \033[1;33m➜\033[0m  $@ ..."
    }

    e_success() {
        echo -e " \033[1;32m✔\033[0m  $@\n"
    }

    e_error() {
        echo -e " \033[1;31m✖\033[0m  $@\n"
    }

    e_end() {
        status=$?
        if test $status -eq 0; then
            e_success "Complete"
        else
            e_error "Error"
        fi
    }

    clear
    echo -e "OS X Setup Script\n=================\n"
    # Ask for the administrator password upfront
    sudo -v

    # Set hostname
    e_begin "Configuring Hostname"
    read -p "    Hostname: " name
    if test -z $name; then
        e_success "Hostname unchanged"
    else
        sudo scutil --set ComputerName "$name"
        sudo scutil --set HostName "$name"
        sudo scutil --set LocalHostName "$name"
        sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSNam
        e_end
    fi

    # Install dependancies
    e_begin "Installing Xcode Command Line Tools"
    if !(xcode-select -p > /dev/null); then
        xcode-select --install
        e_end
    else
        e_success "Already installed"
    fi

    e_begin "Installing Homebrew"
    if !(which brew > /dev/null); then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        e_end
    else
        e_success "Already installed"
        e_begin "Updating Homebrew"
        brew update > /dev/null
        e_end
    fi

    e_begin "Installing RCM"
    if !(brew list | grep rcm > /dev/null); then
        brew tap thoughtbot/formulae
        brew install rcm
        e_end
    else
        e_success "Already installed"
    fi

    brew_install() {
        for app; do
            if !(brew list | grep $app > /dev/null); then
                echo "Installing: $app"
                brew install $app || true
            fi
        done
    }
    e_begin "Installing Homebrew applications"
    brew_install vim coreutils > /dev/null
    e_end

    e_begin "Brew cleanup"
    brew cleanup > /dev/null
    e_end

    e_begin "Linking dotfiles to your home directory"
    rcup -d ~/.dotfiles -x "*:*setup*" -x "*:*README*"
    e_end

    e_begin "Loading new config"
    source ~/.bashrc
    e_end

    e_begin "Git configuration"
    read -p "    Name: " gitName
    if test ! -z "$gitName"; then
        git config --global user.name "$gitName"
    fi
    read -p "    Email: " gitEmail
    if test ! -z "$gitEmail"; then
        git config --global user.email "$gitEmail"
    fi
    git config --global core.editor "$(which vim)"
    git config --global core.autocrlf input
    git config --global alias.unstage 'reset HEAD --'
    git config --global alias.last 'log -1 HEAD'
    git config --global alias.co checkout
    git config --global alias.br branch
    git config --global alias.ci commit
    git config --global alias.s status
    git config --global alias.logp 'log --pretty=oneline --graph'
    e_end

    e_begin "Vim configuration"
    if [ ! -d ~/.vim/bundle/base16-vim ]; then
        git clone https://github.com/chriskempson/base16-vim.git ~/.vim/bundle/base16-vim > /dev/null
    fi
    if [ ! -d ~/.vim/bundle/Vundle.vim ]; then
        git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim > /dev/null
    fi
    vim +PluginInstall +qall
    e_end

    echo -e "\nScript complete"

else
    echo "This script runs under OS X only."
fi
