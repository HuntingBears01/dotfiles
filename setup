#!/usr/bin/env bash

begin() {
    printf " \033[0;33m➜\033[0m  %s\n" "$*"
}
success() {
    printf " \033[0;32m✔\033[0m  %s\n" "$*"
}
error() {
    printf " \033[0;31m✖\033[0m  %s\n" "$*"
}
end() {
    status=$?
    if [ $status -eq 0 ]; then
        success "Complete"
    else
        error "Error"
    fi
}
apt_install() {
    for app; do
        printf "\n"
        begin "Installing $app"
        if ! (dpkg --list | grep "$app" > /dev/null 2>&1); then
            sudo apt-get -y install "$app" > /dev/null 2>&1 || false
            end
        else
            success "Already installed"
        fi
    done
}
brew_install() {
    for app; do
        printf "\n"
        begin "Installing $app"
        if ! (brew list | grep "$app" > /dev/null 2>&1); then
            brew install "$app" > /dev/null 2>&1 || false
            end
        else
            success "Already installed"
        fi
    done
}
yum_install() {
    for app; do
        printf "\n"
        begin "Installing $app"
        if ! (rpm -qa | grep "$app" > /dev/null 2>&1); then
            yum install "$app" > /dev/null 2>&1 || false
            end
        else
            success "Already installed"
        fi
    done
}
git_setup() {
    printf "\n"
    begin "Git configuration"
    read -rp "    Name: " gitName
    if [ ! -z "$gitName" ]; then
        git config --global user.name "$gitName"
    fi
    read -rp "    Email: " gitEmail
    if [ ! -z "$gitEmail" ]; then
        git config --global user.email "$gitEmail"
    fi
    git config --global color.ui auto
    git config --global core.editor "$(which vim)"
    git config --global core.autocrlf input
    git config --global push.default current
    git config --global alias.unstage 'reset HEAD --'
    git config --global alias.last 'log -1 HEAD'
    git config --global alias.co checkout
    git config --global alias.br branch
    git config --global alias.ci commit
    git config --global alias.s status
    git config --global alias.logp 'log --pretty=oneline --graph'
    end
}
setup_common() {
    printf "\n"
    begin "Linking dotfiles to your home directory"
    rcup -d ~/.dotfiles -x "*:*setup*" -x "*:*README*" -x "*:*docs*"
    end

    git_setup

    printf "\n"
    begin "Vim configuration"
    if [ ! -d ~/.vim/bundle/base16-vim ]; then
        git clone https://github.com/chriskempson/base16-vim.git ~/.vim/bundle/base16-vim > /dev/null 2>&1
    fi
    if [ ! -d ~/.vim/bundle/Vundle.vim ]; then
        git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim > /dev/null 2>&1
    fi
    vim +PluginInstall +qall
    end

    printf "\n"
    begin "Loading new config"
    source ~/.bashrc
    end

    printf "\n\n\n"
    success "Script complete"
    printf "\n\n"
}
setup_debian() {
    sudo -v
    begin "Updating package list"
    sudo apt-get update > /dev/null 2>&1
    end

    printf "\n"
    begin "Installing Vim"
    sudo apt-get -y install vim > /dev/null 2>&1
    end

    apt_install git wget shellcheck python3 python3-pip at mtr-tiny

    printf "\n"
    begin "Installing RCM"
    if [ "$( which lsrc )" ]; then
        success "Already installed"
    else
        wget https://thoughtbot.github.io/rcm/debs/rcm_1.3.0-1_all.deb > /dev/null 2>&1
        sha=$(sha256sum rcm_1.3.0-1_all.deb | cut -f1 -d' ') > /dev/null 2>&1
        [ "$sha" = "2e95bbc23da4a0b995ec4757e0920197f4c92357214a65fedaf24274cda6806d" ] && sudo dpkg -i rcm_1.3.0-1_all.deb > /dev/null 2>&1
        end
    fi

    setup_common
}
setup_rhel() {
    printf "\n"
    yum_install git wget

    printf "\n"
    begin "Installing RCM"
    if [ "$( which lsrc )" ]; then
        success "Already installed"
    else
        cd /etc/yum.repos.d/ || error "Unable to find /etc/yum.repos.d/" && exit
        wget http://download.opensuse.org/repositories/utilities/RHEL_6/utilities.repo > /dev/null 2>&1
        yum install rcm > /dev/null 2>&1
        end
    fi

    yum_install vim shellcheck mtr

    setup_common
}
setup_osx() {
    sudo -v
    printf "\n"
    begin "Configuring Hostname"
    read -rp "    Hostname: " name
    if [ -z "$name" ]; then
        success "Hostname unchanged"
    else
        sudo scutil --set ComputerName "$name"
        sudo scutil --set HostName "$name"
        sudo scutil --set LocalHostName "$name"
        sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$name"
        end
    fi

    printf "\n"
    begin "Installing Homebrew"
    if ! (which brew > /dev/null 2>&1); then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" > /dev/null 2>&1
        end
    else
        success "Already installed"
        printf "\n"
        begin "Updating Homebrew"
        brew update > /dev/null 2>&1
        brew upgrade > /dev/null 2>&1
        end
    fi

    printf "\n"
    begin "Installing RCM"
    if ! (brew list | grep rcm > /dev/null 2>&1); then
        brew tap thoughtbot/formulae > /dev/null 2>&1
        brew install rcm > /dev/null 2>&1
        end
    else
        success "Already installed"
    fi

    brew_install vim coreutils shellcheck python3 bash mtr

    printf "\n"
    begin "Brew cleanup"
    brew cleanup > /dev/null 2>&1
    end

    printf "\n"
    begin "Set GNU Bash as default"
    # Add the GNU shell to the list of allowed shells
    if ([ "$( cat /etc/shells | grep '/usr/local/bin/bash' )" -ge 1 ]) > /dev/null 2>&1; then
        sudo bash -c 'echo /usr/local/bin/bash >> /etc/shells'
    fi
    # Change to the GNU shell
    sudo chsh -s /usr/local/bin/bash "$USER" > /dev/null 2>&1
    end

    setup_common
}

clear
printf "Dotfiles Setup Script\n=====================\n\n"

if ([ "$( uname -s )" = "Darwin" ]) > /dev/null 2>&1; then
    setup_osx
elif ([ "$( cat /etc/*release | grep -ci "debian" )" -ge 1 ]) > /dev/null 2>&1; then
    setup_debian
elif ([ "$( cat /etc/*release | grep -ci "red hat" )" -ge 1 ]) > /dev/null 2>&1; then
    setup_rhel
elif ([ "$( cat /etc/*release | grep -ci "centos" )" -ge 1 ]) > /dev/null 2>&1; then
    setup_rhel
else
    error "Unknown Distro - Manual install required\n"
    exit
fi
