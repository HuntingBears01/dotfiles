#! /usr/bin/env bash

set -euo pipefail

# Update script
# Author: Ciara Martin

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Define variables
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Text formatting
grey=$(tput setaf 7)
italic=$(tput sitm)
reset=$(tput sgr0)
yellow=$(tput setaf 3)

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Define functions
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

info() {
  # Purpose:  Displays an info message
  # Usage:    info "Message"
  echo
  echo "${yellow}${italic}==> ${grey}$1${reset}"
  echo
}

pushd () {
  # Purpose:  Hide output from pushd when successful
  # Usage:    pushd /path/to/dir
  # shellcheck disable=SC2164
  command pushd "$@" > /dev/null
}

popd () {
  # Purpose:  Hide output from popd when successful
  # Usage:    popd
  # shellcheck disable=SC2164
  command popd > /dev/null
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Update dotfiles
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [[ -d "${HOME}"/.config/dotfiles ]]; then
  pushd "${HOME}"/.config/dotfiles || exit
  if (git fetch -v --dry-run 2>&1 | grep -q "up to date") > /dev/null 2>&1; then
    info "dotfiles up to date"
  else
    if (git stash push 2>&1 | grep -iq "no local changes") > /dev/null 2>&1; then
      stashed=false
    else
      info "Local changes stashed"
      stashed=true
    fi
    info "Updating dotfiles"
    git pull && ./setup.sh
    if [ "${stashed}" = true ]; then
      info "Restoring local changes"
      git stash pop
    fi
  fi
  popd || exit
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Update fzf (git version)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [[ -d "${HOME}"/.local/bin/fzf ]]; then
  pushd "${HOME}"/.local/bin/fzf || exit
  if (git fetch -v --dry-run 2>&1 | grep -q "up to date") > /dev/null 2>&1; then
    info "fzf is up to date"
  else
    if (git stash push 2>&1 | grep -iq "no local changes") > /dev/null 2>&1; then
      stashed=false
    else
      info "Local changes stashed"
      stashed=true
    fi
    info "Updating fzf"
    git pull && ./install --bin
    if [ "${stashed}" = true ]; then
      info "Restoring local changes"
      git stash pop
    fi
  fi
  popd || exit
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Update powerlevel10k
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [[ -d "${HOME}"/.config/powerlevel10k ]]; then
  pushd "${HOME}"/.config/powerlevel10k || exit
  if (git fetch -v --dry-run 2>&1 | grep -q "up to date") > /dev/null 2>&1; then
    info "powerlevel10k is up to date"
  else
    if (git stash push 2>&1 | grep -iq "no local changes") > /dev/null 2>&1; then
      stashed=false
    else
      info "Local changes stashed"
      stashed=true
    fi
    info "Updating powerlevel10k"
    git pull
    if [ "${stashed}" = true ]; then
      info "Restoring local changes"
      git stash pop
    fi
  fi
  popd || exit
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Update Mac using brew
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if  [[ "$( uname -s )" = "Darwin" ]] > /dev/null 2>&1; then
  brew update-if-needed

  if [[ -z "$(brew outdated --quiet)" ]] > /dev/null 2>&1; then
    info "Homebrew apps are up to date"
  else
    brew upgrade
  fi
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Update Linux using default package manager
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f /etc/os-release ]; then
  source /etc/os-release
  os="${ID:=unknown}"
  os_family="${ID_LIKE:=unknown}"
  case "${os}" in
    debian | ubuntu | raspbian | pop )
      sudo apt update

      updatesAvailable=$(apt-get --dry-run upgrade | grep -c ^Inst || test $? = 1) > /dev/null 2>&1
      if [[ ${updatesAvailable} -gt 0 ]]; then
        sudo apt upgrade
        sudo apt autoremove
      else
        info "No updates available"
      fi
      ;;
  esac

  case "${os_family}" in
    *arch* )
      sudo pacman -Syu
      ;;
    *rhel* | *fedora* )
      if (command -v dnf > /dev/null 2>&1); then
        sudo dnf update
      else
        sudo yum update
      fi
      ;;
    *opensuse* | *suse* )
      sudo zypper refresh
      sudo zypper update
      ;;
  esac
fi
